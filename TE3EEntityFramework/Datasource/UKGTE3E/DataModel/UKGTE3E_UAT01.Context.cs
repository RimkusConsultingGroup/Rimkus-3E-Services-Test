//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TE3EEntityFramework.Datasource.UKGTE3E.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UKGTE3E_UAT01Entities : DbContext
    {
        public UKGTE3E_UAT01Entities()
            : base("name=UKGTE3E_UAT01Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UKG_TE_3E_TIMEKEEPER> UKG_TE_3E_TIMEKEEPER { get; set; }
        public virtual DbSet<UKG_TE_3E_TIMEKEEPER_AUDIT> UKG_TE_3E_TIMEKEEPER_AUDIT { get; set; }
        public virtual DbSet<UKG_TE_3E_TRANSACTION_LOGS> UKG_TE_3E_TRANSACTION_LOGS { get; set; }
        public virtual DbSet<ONELOGIN_TE_3E_TRANSACTION_LOGS> ONELOGIN_TE_3E_TRANSACTION_LOGS { get; set; }
        public virtual DbSet<ONELOGIN_TE_3E_USER> ONELOGIN_TE_3E_USER { get; set; }
        public virtual DbSet<ONELOGIN_TE_3E_USER_AUDIT> ONELOGIN_TE_3E_USER_AUDIT { get; set; }
        public virtual DbSet<UKG_TE_3E_CONFIGURATION> UKG_TE_3E_CONFIGURATION { get; set; }
        public virtual DbSet<UKG_TE_3E_PO> UKG_TE_3E_PO { get; set; }
        public virtual DbSet<UKG_TE_3E_PO_AUDIT> UKG_TE_3E_PO_AUDIT { get; set; }
        public virtual DbSet<UKG_TE_3E_PO_TRANSACTION_LOGS> UKG_TE_3E_PO_TRANSACTION_LOGS { get; set; }
        public virtual DbSet<UKG_TE_3E_BILLING_TITLE_DASHBOARD> UKG_TE_3E_BILLING_TITLE_DASHBOARD { get; set; }
        public virtual DbSet<UKG_TE_3E_DASHBOARD_ROLE> UKG_TE_3E_DASHBOARD_ROLE { get; set; }
        public virtual DbSet<REQUISITION_TE_3E_PO_REF> REQUISITION_TE_3E_PO_REF { get; set; }
    
        public virtual int ukg3e_add_timekeeper_sp(string number, Nullable<int> tkprIndex, string altNumber, string userName, string email, string entity, Nullable<int> entityIndex, string entity_Type, string firstName, string lastName, string middleName, string display_Name, string type, string payroll_Number, string hR_Number, string bill_Name, string bill_Initial, string status, string sort_Name, Nullable<System.DateTime> compDate, string timekeeper_Category, Nullable<System.DateTime> effStart, string office, string department, string section, Nullable<System.DateTime> hire_Date, Nullable<System.DateTime> termination_Date, string title, string rate_Class, string work_Calender, string unit, string supervising_timeKeeper, string work_type, string billing_Corodinator, string sitephone, string licenseType, string licCountry, string licState, Nullable<System.DateTime> licExpiration, string licCertificationNo, Nullable<System.DateTime> lastChangeTimeStamp, Nullable<System.DateTime> importedDate, string svcOperation, Nullable<int> numOfAttempt, string logInfo, Nullable<bool> isProcessed, Nullable<System.DateTime> processedDate)
        {
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var tkprIndexParameter = tkprIndex.HasValue ?
                new ObjectParameter("TkprIndex", tkprIndex) :
                new ObjectParameter("TkprIndex", typeof(int));
    
            var altNumberParameter = altNumber != null ?
                new ObjectParameter("AltNumber", altNumber) :
                new ObjectParameter("AltNumber", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var entityParameter = entity != null ?
                new ObjectParameter("Entity", entity) :
                new ObjectParameter("Entity", typeof(string));
    
            var entityIndexParameter = entityIndex.HasValue ?
                new ObjectParameter("EntityIndex", entityIndex) :
                new ObjectParameter("EntityIndex", typeof(int));
    
            var entity_TypeParameter = entity_Type != null ?
                new ObjectParameter("Entity_Type", entity_Type) :
                new ObjectParameter("Entity_Type", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var display_NameParameter = display_Name != null ?
                new ObjectParameter("Display_Name", display_Name) :
                new ObjectParameter("Display_Name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var payroll_NumberParameter = payroll_Number != null ?
                new ObjectParameter("Payroll_Number", payroll_Number) :
                new ObjectParameter("Payroll_Number", typeof(string));
    
            var hR_NumberParameter = hR_Number != null ?
                new ObjectParameter("HR_Number", hR_Number) :
                new ObjectParameter("HR_Number", typeof(string));
    
            var bill_NameParameter = bill_Name != null ?
                new ObjectParameter("Bill_Name", bill_Name) :
                new ObjectParameter("Bill_Name", typeof(string));
    
            var bill_InitialParameter = bill_Initial != null ?
                new ObjectParameter("Bill_Initial", bill_Initial) :
                new ObjectParameter("Bill_Initial", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var sort_NameParameter = sort_Name != null ?
                new ObjectParameter("Sort_Name", sort_Name) :
                new ObjectParameter("Sort_Name", typeof(string));
    
            var compDateParameter = compDate.HasValue ?
                new ObjectParameter("CompDate", compDate) :
                new ObjectParameter("CompDate", typeof(System.DateTime));
    
            var timekeeper_CategoryParameter = timekeeper_Category != null ?
                new ObjectParameter("Timekeeper_Category", timekeeper_Category) :
                new ObjectParameter("Timekeeper_Category", typeof(string));
    
            var effStartParameter = effStart.HasValue ?
                new ObjectParameter("EffStart", effStart) :
                new ObjectParameter("EffStart", typeof(System.DateTime));
    
            var officeParameter = office != null ?
                new ObjectParameter("Office", office) :
                new ObjectParameter("Office", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var sectionParameter = section != null ?
                new ObjectParameter("Section", section) :
                new ObjectParameter("Section", typeof(string));
    
            var hire_DateParameter = hire_Date.HasValue ?
                new ObjectParameter("Hire_Date", hire_Date) :
                new ObjectParameter("Hire_Date", typeof(System.DateTime));
    
            var termination_DateParameter = termination_Date.HasValue ?
                new ObjectParameter("Termination_Date", termination_Date) :
                new ObjectParameter("Termination_Date", typeof(System.DateTime));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var rate_ClassParameter = rate_Class != null ?
                new ObjectParameter("Rate_Class", rate_Class) :
                new ObjectParameter("Rate_Class", typeof(string));
    
            var work_CalenderParameter = work_Calender != null ?
                new ObjectParameter("Work_Calender", work_Calender) :
                new ObjectParameter("Work_Calender", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var supervising_timeKeeperParameter = supervising_timeKeeper != null ?
                new ObjectParameter("Supervising_timeKeeper", supervising_timeKeeper) :
                new ObjectParameter("Supervising_timeKeeper", typeof(string));
    
            var work_typeParameter = work_type != null ?
                new ObjectParameter("Work_type", work_type) :
                new ObjectParameter("Work_type", typeof(string));
    
            var billing_CorodinatorParameter = billing_Corodinator != null ?
                new ObjectParameter("Billing_Corodinator", billing_Corodinator) :
                new ObjectParameter("Billing_Corodinator", typeof(string));
    
            var sitephoneParameter = sitephone != null ?
                new ObjectParameter("Sitephone", sitephone) :
                new ObjectParameter("Sitephone", typeof(string));
    
            var licenseTypeParameter = licenseType != null ?
                new ObjectParameter("LicenseType", licenseType) :
                new ObjectParameter("LicenseType", typeof(string));
    
            var licCountryParameter = licCountry != null ?
                new ObjectParameter("LicCountry", licCountry) :
                new ObjectParameter("LicCountry", typeof(string));
    
            var licStateParameter = licState != null ?
                new ObjectParameter("LicState", licState) :
                new ObjectParameter("LicState", typeof(string));
    
            var licExpirationParameter = licExpiration.HasValue ?
                new ObjectParameter("LicExpiration", licExpiration) :
                new ObjectParameter("LicExpiration", typeof(System.DateTime));
    
            var licCertificationNoParameter = licCertificationNo != null ?
                new ObjectParameter("LicCertificationNo", licCertificationNo) :
                new ObjectParameter("LicCertificationNo", typeof(string));
    
            var lastChangeTimeStampParameter = lastChangeTimeStamp.HasValue ?
                new ObjectParameter("LastChangeTimeStamp", lastChangeTimeStamp) :
                new ObjectParameter("LastChangeTimeStamp", typeof(System.DateTime));
    
            var importedDateParameter = importedDate.HasValue ?
                new ObjectParameter("ImportedDate", importedDate) :
                new ObjectParameter("ImportedDate", typeof(System.DateTime));
    
            var svcOperationParameter = svcOperation != null ?
                new ObjectParameter("SvcOperation", svcOperation) :
                new ObjectParameter("SvcOperation", typeof(string));
    
            var numOfAttemptParameter = numOfAttempt.HasValue ?
                new ObjectParameter("NumOfAttempt", numOfAttempt) :
                new ObjectParameter("NumOfAttempt", typeof(int));
    
            var logInfoParameter = logInfo != null ?
                new ObjectParameter("LogInfo", logInfo) :
                new ObjectParameter("LogInfo", typeof(string));
    
            var isProcessedParameter = isProcessed.HasValue ?
                new ObjectParameter("IsProcessed", isProcessed) :
                new ObjectParameter("IsProcessed", typeof(bool));
    
            var processedDateParameter = processedDate.HasValue ?
                new ObjectParameter("ProcessedDate", processedDate) :
                new ObjectParameter("ProcessedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ukg3e_add_timekeeper_sp", numberParameter, tkprIndexParameter, altNumberParameter, userNameParameter, emailParameter, entityParameter, entityIndexParameter, entity_TypeParameter, firstNameParameter, lastNameParameter, middleNameParameter, display_NameParameter, typeParameter, payroll_NumberParameter, hR_NumberParameter, bill_NameParameter, bill_InitialParameter, statusParameter, sort_NameParameter, compDateParameter, timekeeper_CategoryParameter, effStartParameter, officeParameter, departmentParameter, sectionParameter, hire_DateParameter, termination_DateParameter, titleParameter, rate_ClassParameter, work_CalenderParameter, unitParameter, supervising_timeKeeperParameter, work_typeParameter, billing_CorodinatorParameter, sitephoneParameter, licenseTypeParameter, licCountryParameter, licStateParameter, licExpirationParameter, licCertificationNoParameter, lastChangeTimeStampParameter, importedDateParameter, svcOperationParameter, numOfAttemptParameter, logInfoParameter, isProcessedParameter, processedDateParameter);
        }
    
        public virtual int ukg3e_delete_timekeeper_sp(string tkprNumber)
        {
            var tkprNumberParameter = tkprNumber != null ?
                new ObjectParameter("TkprNumber", tkprNumber) :
                new ObjectParameter("TkprNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ukg3e_delete_timekeeper_sp", tkprNumberParameter);
        }
    
        public virtual ObjectResult<ukg3e_get_entityperson_by_first_middle_last_name_sp_Result> ukg3e_get_entityperson_by_first_middle_last_name_sp(string firstName, string middleName, string lastName)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ukg3e_get_entityperson_by_first_middle_last_name_sp_Result>("ukg3e_get_entityperson_by_first_middle_last_name_sp", firstNameParameter, middleNameParameter, lastNameParameter);
        }
    
        public virtual ObjectResult<ukg3e_get_entityperson_sp_Result> ukg3e_get_entityperson_sp(string displayName)
        {
            var displayNameParameter = displayName != null ?
                new ObjectParameter("displayName", displayName) :
                new ObjectParameter("displayName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ukg3e_get_entityperson_sp_Result>("ukg3e_get_entityperson_sp", displayNameParameter);
        }
    
        public virtual ObjectResult<ukg3e_get_timekeeper_sp_Result> ukg3e_get_timekeeper_sp(Nullable<int> numOfAttempt)
        {
            var numOfAttemptParameter = numOfAttempt.HasValue ?
                new ObjectParameter("numOfAttempt", numOfAttempt) :
                new ObjectParameter("numOfAttempt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ukg3e_get_timekeeper_sp_Result>("ukg3e_get_timekeeper_sp", numOfAttemptParameter);
        }
    
        public virtual ObjectResult<ukg3e_get_tkpr_accreditation_sp_Result> ukg3e_get_tkpr_accreditation_sp(string certNumber, string licType, string state)
        {
            var certNumberParameter = certNumber != null ?
                new ObjectParameter("certNumber", certNumber) :
                new ObjectParameter("certNumber", typeof(string));
    
            var licTypeParameter = licType != null ?
                new ObjectParameter("licType", licType) :
                new ObjectParameter("licType", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ukg3e_get_tkpr_accreditation_sp_Result>("ukg3e_get_tkpr_accreditation_sp", certNumberParameter, licTypeParameter, stateParameter);
        }
    
        public virtual ObjectResult<ukg3e_get_tkpr_by_displayname_sp_Result> ukg3e_get_tkpr_by_displayname_sp(string displayName)
        {
            var displayNameParameter = displayName != null ?
                new ObjectParameter("displayName", displayName) :
                new ObjectParameter("displayName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ukg3e_get_tkpr_by_displayname_sp_Result>("ukg3e_get_tkpr_by_displayname_sp", displayNameParameter);
        }
    
        public virtual ObjectResult<ukg3e_get_tkpr_by_num_sp_Result> ukg3e_get_tkpr_by_num_sp(string tkprNumber)
        {
            var tkprNumberParameter = tkprNumber != null ?
                new ObjectParameter("tkprNumber", tkprNumber) :
                new ObjectParameter("tkprNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ukg3e_get_tkpr_by_num_sp_Result>("ukg3e_get_tkpr_by_num_sp", tkprNumberParameter);
        }
    
        public virtual ObjectResult<ukg3e_get_tkpr_date_sp_Result> ukg3e_get_tkpr_date_sp(string tkprNumber, string tkprEffStart)
        {
            var tkprNumberParameter = tkprNumber != null ?
                new ObjectParameter("tkprNumber", tkprNumber) :
                new ObjectParameter("tkprNumber", typeof(string));
    
            var tkprEffStartParameter = tkprEffStart != null ?
                new ObjectParameter("tkprEffStart", tkprEffStart) :
                new ObjectParameter("tkprEffStart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ukg3e_get_tkpr_date_sp_Result>("ukg3e_get_tkpr_date_sp", tkprNumberParameter, tkprEffStartParameter);
        }
    
        public virtual ObjectResult<ukg3e_lookup_code_sp_Result> ukg3e_lookup_code_sp(string description, string lookupType)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var lookupTypeParameter = lookupType != null ?
                new ObjectParameter("lookupType", lookupType) :
                new ObjectParameter("lookupType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ukg3e_lookup_code_sp_Result>("ukg3e_lookup_code_sp", descriptionParameter, lookupTypeParameter);
        }
    
        public virtual int ukg3e_update_timekeeper_sp(string tkprNumber, Nullable<int> numOfAttempt, string logInfo, Nullable<bool> isProcessed, Nullable<System.DateTime> processedDate)
        {
            var tkprNumberParameter = tkprNumber != null ?
                new ObjectParameter("TkprNumber", tkprNumber) :
                new ObjectParameter("TkprNumber", typeof(string));
    
            var numOfAttemptParameter = numOfAttempt.HasValue ?
                new ObjectParameter("NumOfAttempt", numOfAttempt) :
                new ObjectParameter("NumOfAttempt", typeof(int));
    
            var logInfoParameter = logInfo != null ?
                new ObjectParameter("LogInfo", logInfo) :
                new ObjectParameter("LogInfo", typeof(string));
    
            var isProcessedParameter = isProcessed.HasValue ?
                new ObjectParameter("IsProcessed", isProcessed) :
                new ObjectParameter("IsProcessed", typeof(bool));
    
            var processedDateParameter = processedDate.HasValue ?
                new ObjectParameter("ProcessedDate", processedDate) :
                new ObjectParameter("ProcessedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ukg3e_update_timekeeper_sp", tkprNumberParameter, numOfAttemptParameter, logInfoParameter, isProcessedParameter, processedDateParameter);
        }
    
        public virtual int onelogin3e_add_user_sp(string number, Nullable<int> tkprIndex, string userName, string email, string altNumber, string entity, Nullable<int> entityIndex, string entity_Type, string firstName, string lastName, string middleName, string display_Name, string type, string payroll_Number, string hR_Number, string bill_Name, string bill_Initial, string status, string sort_Name, Nullable<System.DateTime> compDate, string timekeeper_Category, Nullable<System.DateTime> effStart, string office, string department, string section, Nullable<System.DateTime> hire_Date, Nullable<System.DateTime> termination_Date, string title, string rate_Class, string work_Calender, string unit, string supervising_timeKeeper, string work_type, string billing_Corodinator, string sitephone, string licenseType, string licCountry, string licState, Nullable<System.DateTime> licExpiration, string licCertificationNo, Nullable<System.DateTime> lastChangeTimeStamp, Nullable<System.DateTime> importedDate, string svcOperation, Nullable<int> numOfAttempt, string logInfo, Nullable<bool> isProcessed, Nullable<System.DateTime> processedDate)
        {
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var tkprIndexParameter = tkprIndex.HasValue ?
                new ObjectParameter("TkprIndex", tkprIndex) :
                new ObjectParameter("TkprIndex", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var altNumberParameter = altNumber != null ?
                new ObjectParameter("AltNumber", altNumber) :
                new ObjectParameter("AltNumber", typeof(string));
    
            var entityParameter = entity != null ?
                new ObjectParameter("Entity", entity) :
                new ObjectParameter("Entity", typeof(string));
    
            var entityIndexParameter = entityIndex.HasValue ?
                new ObjectParameter("EntityIndex", entityIndex) :
                new ObjectParameter("EntityIndex", typeof(int));
    
            var entity_TypeParameter = entity_Type != null ?
                new ObjectParameter("Entity_Type", entity_Type) :
                new ObjectParameter("Entity_Type", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var display_NameParameter = display_Name != null ?
                new ObjectParameter("Display_Name", display_Name) :
                new ObjectParameter("Display_Name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var payroll_NumberParameter = payroll_Number != null ?
                new ObjectParameter("Payroll_Number", payroll_Number) :
                new ObjectParameter("Payroll_Number", typeof(string));
    
            var hR_NumberParameter = hR_Number != null ?
                new ObjectParameter("HR_Number", hR_Number) :
                new ObjectParameter("HR_Number", typeof(string));
    
            var bill_NameParameter = bill_Name != null ?
                new ObjectParameter("Bill_Name", bill_Name) :
                new ObjectParameter("Bill_Name", typeof(string));
    
            var bill_InitialParameter = bill_Initial != null ?
                new ObjectParameter("Bill_Initial", bill_Initial) :
                new ObjectParameter("Bill_Initial", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var sort_NameParameter = sort_Name != null ?
                new ObjectParameter("Sort_Name", sort_Name) :
                new ObjectParameter("Sort_Name", typeof(string));
    
            var compDateParameter = compDate.HasValue ?
                new ObjectParameter("CompDate", compDate) :
                new ObjectParameter("CompDate", typeof(System.DateTime));
    
            var timekeeper_CategoryParameter = timekeeper_Category != null ?
                new ObjectParameter("Timekeeper_Category", timekeeper_Category) :
                new ObjectParameter("Timekeeper_Category", typeof(string));
    
            var effStartParameter = effStart.HasValue ?
                new ObjectParameter("EffStart", effStart) :
                new ObjectParameter("EffStart", typeof(System.DateTime));
    
            var officeParameter = office != null ?
                new ObjectParameter("Office", office) :
                new ObjectParameter("Office", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var sectionParameter = section != null ?
                new ObjectParameter("Section", section) :
                new ObjectParameter("Section", typeof(string));
    
            var hire_DateParameter = hire_Date.HasValue ?
                new ObjectParameter("Hire_Date", hire_Date) :
                new ObjectParameter("Hire_Date", typeof(System.DateTime));
    
            var termination_DateParameter = termination_Date.HasValue ?
                new ObjectParameter("Termination_Date", termination_Date) :
                new ObjectParameter("Termination_Date", typeof(System.DateTime));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var rate_ClassParameter = rate_Class != null ?
                new ObjectParameter("Rate_Class", rate_Class) :
                new ObjectParameter("Rate_Class", typeof(string));
    
            var work_CalenderParameter = work_Calender != null ?
                new ObjectParameter("Work_Calender", work_Calender) :
                new ObjectParameter("Work_Calender", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var supervising_timeKeeperParameter = supervising_timeKeeper != null ?
                new ObjectParameter("Supervising_timeKeeper", supervising_timeKeeper) :
                new ObjectParameter("Supervising_timeKeeper", typeof(string));
    
            var work_typeParameter = work_type != null ?
                new ObjectParameter("Work_type", work_type) :
                new ObjectParameter("Work_type", typeof(string));
    
            var billing_CorodinatorParameter = billing_Corodinator != null ?
                new ObjectParameter("Billing_Corodinator", billing_Corodinator) :
                new ObjectParameter("Billing_Corodinator", typeof(string));
    
            var sitephoneParameter = sitephone != null ?
                new ObjectParameter("Sitephone", sitephone) :
                new ObjectParameter("Sitephone", typeof(string));
    
            var licenseTypeParameter = licenseType != null ?
                new ObjectParameter("LicenseType", licenseType) :
                new ObjectParameter("LicenseType", typeof(string));
    
            var licCountryParameter = licCountry != null ?
                new ObjectParameter("LicCountry", licCountry) :
                new ObjectParameter("LicCountry", typeof(string));
    
            var licStateParameter = licState != null ?
                new ObjectParameter("LicState", licState) :
                new ObjectParameter("LicState", typeof(string));
    
            var licExpirationParameter = licExpiration.HasValue ?
                new ObjectParameter("LicExpiration", licExpiration) :
                new ObjectParameter("LicExpiration", typeof(System.DateTime));
    
            var licCertificationNoParameter = licCertificationNo != null ?
                new ObjectParameter("LicCertificationNo", licCertificationNo) :
                new ObjectParameter("LicCertificationNo", typeof(string));
    
            var lastChangeTimeStampParameter = lastChangeTimeStamp.HasValue ?
                new ObjectParameter("LastChangeTimeStamp", lastChangeTimeStamp) :
                new ObjectParameter("LastChangeTimeStamp", typeof(System.DateTime));
    
            var importedDateParameter = importedDate.HasValue ?
                new ObjectParameter("ImportedDate", importedDate) :
                new ObjectParameter("ImportedDate", typeof(System.DateTime));
    
            var svcOperationParameter = svcOperation != null ?
                new ObjectParameter("SvcOperation", svcOperation) :
                new ObjectParameter("SvcOperation", typeof(string));
    
            var numOfAttemptParameter = numOfAttempt.HasValue ?
                new ObjectParameter("NumOfAttempt", numOfAttempt) :
                new ObjectParameter("NumOfAttempt", typeof(int));
    
            var logInfoParameter = logInfo != null ?
                new ObjectParameter("LogInfo", logInfo) :
                new ObjectParameter("LogInfo", typeof(string));
    
            var isProcessedParameter = isProcessed.HasValue ?
                new ObjectParameter("IsProcessed", isProcessed) :
                new ObjectParameter("IsProcessed", typeof(bool));
    
            var processedDateParameter = processedDate.HasValue ?
                new ObjectParameter("ProcessedDate", processedDate) :
                new ObjectParameter("ProcessedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("onelogin3e_add_user_sp", numberParameter, tkprIndexParameter, userNameParameter, emailParameter, altNumberParameter, entityParameter, entityIndexParameter, entity_TypeParameter, firstNameParameter, lastNameParameter, middleNameParameter, display_NameParameter, typeParameter, payroll_NumberParameter, hR_NumberParameter, bill_NameParameter, bill_InitialParameter, statusParameter, sort_NameParameter, compDateParameter, timekeeper_CategoryParameter, effStartParameter, officeParameter, departmentParameter, sectionParameter, hire_DateParameter, termination_DateParameter, titleParameter, rate_ClassParameter, work_CalenderParameter, unitParameter, supervising_timeKeeperParameter, work_typeParameter, billing_CorodinatorParameter, sitephoneParameter, licenseTypeParameter, licCountryParameter, licStateParameter, licExpirationParameter, licCertificationNoParameter, lastChangeTimeStampParameter, importedDateParameter, svcOperationParameter, numOfAttemptParameter, logInfoParameter, isProcessedParameter, processedDateParameter);
        }
    
        public virtual int onelogin3e_delete_user_sp(string tkprNumber)
        {
            var tkprNumberParameter = tkprNumber != null ?
                new ObjectParameter("TkprNumber", tkprNumber) :
                new ObjectParameter("TkprNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("onelogin3e_delete_user_sp", tkprNumberParameter);
        }
    
        public virtual ObjectResult<onelogin3e_get_user_by_networkid_sp_Result> onelogin3e_get_user_by_networkid_sp(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<onelogin3e_get_user_by_networkid_sp_Result>("onelogin3e_get_user_by_networkid_sp", userNameParameter);
        }
    
        public virtual ObjectResult<onelogin3e_get_user_sp_Result> onelogin3e_get_user_sp(Nullable<int> numOfAttempt)
        {
            var numOfAttemptParameter = numOfAttempt.HasValue ?
                new ObjectParameter("numOfAttempt", numOfAttempt) :
                new ObjectParameter("numOfAttempt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<onelogin3e_get_user_sp_Result>("onelogin3e_get_user_sp", numOfAttemptParameter);
        }
    
        public virtual int onelogin3e_update_user_sp(string tkprNumber, Nullable<int> numOfAttempt, string logInfo, Nullable<bool> isProcessed, Nullable<System.DateTime> processedDate)
        {
            var tkprNumberParameter = tkprNumber != null ?
                new ObjectParameter("TkprNumber", tkprNumber) :
                new ObjectParameter("TkprNumber", typeof(string));
    
            var numOfAttemptParameter = numOfAttempt.HasValue ?
                new ObjectParameter("NumOfAttempt", numOfAttempt) :
                new ObjectParameter("NumOfAttempt", typeof(int));
    
            var logInfoParameter = logInfo != null ?
                new ObjectParameter("LogInfo", logInfo) :
                new ObjectParameter("LogInfo", typeof(string));
    
            var isProcessedParameter = isProcessed.HasValue ?
                new ObjectParameter("IsProcessed", isProcessed) :
                new ObjectParameter("IsProcessed", typeof(bool));
    
            var processedDateParameter = processedDate.HasValue ?
                new ObjectParameter("ProcessedDate", processedDate) :
                new ObjectParameter("ProcessedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("onelogin3e_update_user_sp", tkprNumberParameter, numOfAttemptParameter, logInfoParameter, isProcessedParameter, processedDateParameter);
        }
    
        public virtual ObjectResult<ukg3e_get_dashboard_roles_by_billingtitle_sp_Result> ukg3e_get_dashboard_roles_by_billingtitle_sp(string billingTitle)
        {
            var billingTitleParameter = billingTitle != null ?
                new ObjectParameter("BillingTitle", billingTitle) :
                new ObjectParameter("BillingTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ukg3e_get_dashboard_roles_by_billingtitle_sp_Result>("ukg3e_get_dashboard_roles_by_billingtitle_sp", billingTitleParameter);
        }
    
        public virtual ObjectResult<onelogin3e_get_user_by_email_sp_Result> onelogin3e_get_user_by_email_sp(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<onelogin3e_get_user_by_email_sp_Result>("onelogin3e_get_user_by_email_sp", emailParameter);
        }
    }
}
